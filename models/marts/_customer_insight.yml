version: 2

models:
  - name: customer_insights
    description: "Aggregated data on customers, including order totals, spending, and customer group details."
    columns:
      - name: customer_id
        description: "Unique identifier for each customer."
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              type_list: ["integer"]

      - name: customer_name
        description: "Full name of the customer."

      - name: email
        description: "Customer's email address or default if unavailable."
        tests:
          - dbt_expectations.expect_column_values_to_be_email

      - name: phone_number
        description: "Customer's phone number or default if unavailable."
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$"  # Regex for phone numbers

      - name: customer_group_name
        description: "Name of the customer group associated with this customer."

      - name: customer_group_type
        description: "Type of customer group (e.g., Company, Private Group)."

      - name: registry_number
        description: "Registry number of the customer group, if applicable."

      - name: total_orders
        description: "Total number of orders placed by the customer."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: total_spend
        description: "Total spending by the customer across all orders."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
